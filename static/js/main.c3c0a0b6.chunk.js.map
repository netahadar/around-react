{"version":3,"sources":["blocks/images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeletePostPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logoPath","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onDeletePostClick","currentUser","useContext","isOwn","owner","_id","galleryTrashButtonClassName","isLiked","likes","some","user","galleryLikeButtonClassName","type","onClick","style","backgroundImage","link","name","length","Main","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","cards","avatar","about","map","Footer","ImagePopup","onClose","fetchCall","url","headers","fetch","then","res","ok","json","Promise","reject","statusText","api","baseUrl","this","_baseUrl","_headers","data","method","body","JSON","stringify","obj","cardId","cardID","_dislike","_addLike","authorization","PopupWithForm","props","isOpen","onSubmit","title","children","buttonTitle","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","value","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","avatarLink","useRef","current","ref","AddPlacePopup","onAddPlaceSubmit","place","setPlace","setLink","DeletePostPopup","onDeletePostSubmit","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePostPopupOpen","setIsDeletePostPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","deleteCard","setDeletedCard","closeAllPopups","getInitialCards","catch","console","log","getUserInfo","Provider","changeLikeCardStatus","newCard","cardsState","item","newData","setUserInfo","createNewCard","newCards","filter","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3c0a0b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c7581985.svg\";","import React from 'react';\r\nimport logoPath from '../blocks/images/logo.svg';\r\n\r\nexport default function Header() {\r\n  return (\r\n      <header className=\"header\">\r\n        <img\r\n          className=\"header__logo\"\r\n          src={logoPath}\r\n          alt=\"around the u.s. logo\"\r\n        />\r\n      </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function Card({\r\n  card,\r\n  onCardClick,\r\n  onCardLike,\r\n  onDeletePostClick,\r\n}) {\r\n  //Subscribing to user info context:\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeletePostClick() {\r\n    onDeletePostClick(card);\r\n  }\r\n\r\n  // Checking if the current user is the owner of the current card:\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Creating a variable to set in `className` for the delete button:\r\n  const galleryTrashButtonClassName = `gallery__trash-button ${\r\n    isOwn ? \"gallery__trash-button_visible\" : \"gallery__trash-button_hidden\"\r\n  }`;\r\n\r\n  // Check if the card was liked by the current user\r\n  const isLiked = card.likes.some((user) => user._id === currentUser._id);\r\n\r\n  // Create a variable to set in `className` for the like button:\r\n  const galleryLikeButtonClassName = `gallery__like-button ${\r\n    isLiked && \"gallery__like-button_active\"\r\n  }`;\r\n\r\n  return (\r\n    <li className=\"gallery__item\">\r\n      <button\r\n        className={galleryTrashButtonClassName}\r\n        type=\"button\"\r\n        aria-label=\"delete button\"\r\n        onClick={handleDeletePostClick}\r\n      ></button>\r\n      <div\r\n        className=\"gallery__photo\"\r\n        style={{ backgroundImage: `url(${card.link})` }}\r\n        onClick={handleClick}\r\n      />\r\n      <div className=\"gallery__description\">\r\n        <h2 className=\"gallery__text\">{card.name}</h2>\r\n        <div className=\"gallery__like-container\">\r\n          <button\r\n            className={galleryLikeButtonClassName}\r\n            type=\"button\"\r\n            aria-label=\"like button\"\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"gallery__like-counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function Main({\r\n  onEditProfileClick,\r\n  onAddPlaceClick,\r\n  onEditAvatarClick,\r\n  onDeletePostClick,\r\n  onCardClick,\r\n  cards,\r\n  onCardLike,\r\n}) {\r\n  //Subscribing to user info context:\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div\r\n          className=\"profile__avatar-container\"\r\n          style={{ backgroundImage: `url(\"${currentUser.avatar}\")` }}\r\n        >\r\n          <button\r\n            className=\"profile__avatar-edit\"\r\n            onClick={onEditAvatarClick}\r\n          ></button>\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__info-title\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button\r\n              className=\"profile__edit-button\"\r\n              type=\"button\"\r\n              aria-label=\"edit button\"\r\n              onClick={onEditProfileClick}\r\n            ></button>\r\n          </div>\r\n          <p className=\"profile__job-description\">{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          aria-label=\"add button\"\r\n          onClick={onAddPlaceClick}\r\n        ></button>\r\n      </section>\r\n\r\n      <section className=\"gallery\">\r\n        <ul className=\"gallery__list\">\r\n          {cards.map((card) => {\r\n            return (\r\n              <Card\r\n                card={card}\r\n                key={card._id}\r\n                onCardClick={onCardClick}\r\n                onCardLike={onCardLike}\r\n                onDeletePostClick={onDeletePostClick}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyrights\">© 2021 Neta Hadar Itzhak</p>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ImagePopup({card, onClose}) {\r\n  return (\r\n    <div className={`popup popup_type_photo ${card.name ? \"popup_opened\" : ''}`}>\r\n      <div className=\"popup__container popup__container_type_photo\">\r\n        <button\r\n          className=\"popup__close-button popup__close-button_type_photo\"\r\n          type=\"button\"\r\n          onClick={onClose}\r\n        ></button>\r\n        <div className=\"popup__photo\"  style={{ backgroundImage: `url(${card.link})` }}/>\r\n        <h3 className=\"popup__text\">{card.name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const fetchCall = (url, headers) => {\r\n    return fetch(url, headers)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n  \r\n        Promise.reject(`ERROR: ${res.statusText}`);\r\n      })\r\n  };\r\n  \r\n  class Api {\r\n    constructor(baseUrl, headers) {\r\n      this._baseUrl = baseUrl;\r\n      this._headers = headers;\r\n    }\r\n  \r\n    //Get user info from server:\r\n    getUserInfo() {\r\n      return fetchCall(`${this._baseUrl}/users/me`, {\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Update user avatar:\r\n    setUserAvatar(data) {\r\n      return fetchCall(`${this._baseUrl}/users/me/avatar`, {\r\n        method: \"PATCH\",\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          //New avatar link:\r\n          avatar: data.avatar,\r\n        })\r\n      });\r\n    }\r\n\r\n    //Get initial cards from server:\r\n    getInitialCards() {\r\n      return fetchCall(`${this._baseUrl}/cards`, {\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Send new profile data to server:\r\n    setUserInfo(obj) {\r\n      return fetchCall(`${this._baseUrl}/users/me`, {\r\n        method: \"PATCH\",\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          //New profile data:\r\n          name: obj.name,\r\n          about: obj.about,\r\n        }),\r\n      });\r\n    }\r\n  \r\n    //Add new card:\r\n    createNewCard(obj) {\r\n      return fetchCall(`${this._baseUrl}/cards`, {\r\n        method: \"POST\",\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          //New card data:\r\n          name: obj.name,\r\n          link: obj.link,\r\n        }),\r\n      });\r\n    }\r\n  \r\n    //Delete card:\r\n    deleteCard(cardId) {\r\n      return fetchCall(`${this._baseUrl}/cards/${cardId}`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Add like to card:\r\n    _addLike(cardId) {\r\n      return fetchCall(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n        method: \"PUT\",\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Remove like from catd:\r\n    _dislike(cardId) {\r\n      return fetchCall(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      });\r\n    }\r\n\r\n    //toggle likes:\r\n    changeLikeCardStatus(cardID, isLiked){\r\n      if (isLiked){\r\n        return this._dislike(cardID);\r\n      } else {\r\n        return this._addLike(cardID);\r\n      }\r\n    }\r\n  }\r\n  \r\n  const api = new Api(\"https://around.nomoreparties.co/v1/group-12\", {\r\n    authorization: \"12be1991-4f28-449f-a9a9-71d4704b25a2\",\r\n    \"Content-Type\": \"application/json\",\r\n  });\r\n  \r\n  export default api;","import React from \"react\";\r\n\r\nexport default function PopupWithForm(props){\r\n    return(\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_opened\":''}`} >\r\n          <div className=\"popup__container\">\r\n            <button className=\"popup__close-button\" type=\"button\" onClick={props.onClose}></button>\r\n            <form className=\"popup__form\" name={props.name}  onSubmit={props.onSubmit}>\r\n              <h2 className=\"popup__form-title\">{props.title}</h2>\r\n              {props.children}\r\n              <button className=\"popup__form-submit-button\" type=\"submit\">\r\n                {props.buttonTitle}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  // Subscription to the context\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // After loading the current user from the API\r\n  // their data will be used in managed components.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  //submit handler:\r\n  function handleSubmit(e) {\r\n    // Prevent the browser from navigating to the form address\r\n    e.preventDefault();\r\n\r\n    // Pass the values to the external handler\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"profile\"\r\n      title=\"Edit Profile\"\r\n      buttonTitle=\"Save\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__form-input\"\r\n        id=\"name-input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        placeholder=\"full name\"\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required\r\n      />\r\n      <span id=\"name-input-error\"></span>\r\n      <input\r\n        className=\"popup__form-input\"\r\n        id=\"job-input\"\r\n        type=\"text\"\r\n        name=\"about\"\r\n        value={description}\r\n        onChange={handleDescriptionChange}\r\n        placeholder=\"job title\"\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n      />\r\n      <span id=\"job-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nexport default function EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const avatarLink = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarLink.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      title=\"Change profile picture\"\r\n      buttonTitle=\"Save\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__form-input\"\r\n        id=\"avatar-link\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        placeholder=\"avatar link\"\r\n        ref={avatarLink}\r\n        required\r\n      />\r\n      <span id=\"avatar-link-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nexport default function AddPlacePopup({isOpen, onClose, onAddPlaceSubmit}) {\r\n  const [place, setPlace] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n\r\n  function handlePlaceChange(e) {\r\n    setPlace(e.target.value);\r\n  }\r\n\r\n  function handleLinkChange(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Pass the values to the external handler\r\n    onAddPlaceSubmit({\r\n        name: place,\r\n        link: link\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"post\"\r\n      title=\"New place\"\r\n      buttonTitle=\"Create\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__form-input\"\r\n        id=\"title-input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={place}\r\n        onChange={handlePlaceChange}\r\n        placeholder=\"Title\"\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        required\r\n      />\r\n      <span id=\"title-input-error\"></span>\r\n      <input\r\n        className=\"popup__form-input\"\r\n        id=\"link-input\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        value={link}\r\n        onChange={handleLinkChange}\r\n        placeholder=\"Image link\"\r\n        required\r\n      />\r\n      <span id=\"link-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nexport default function DeletePostPopup({\r\n  isOpen,\r\n  onClose,\r\n  onDeletePostSubmit,\r\n}) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onDeletePostSubmit();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"delete\"\r\n      title=\"Are you sure?\"\r\n      buttonTitle=\"Yes\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeletePostPopup from \"./DeletePostPopup\";\n\nfunction App() {\n  //State for edit avatar popup:\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n\n  //State for edit profile popup:\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n\n  //State for add post popup:\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  //State for delete post popup:\n  const [isDeletePostPopupOpen, setIsDeletePostPopupOpen] =\n    React.useState(false);\n\n  //State for full sized image popup:\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"\",\n    link: \"\",\n  });\n\n  //State for user data:\n  const [currentUser, setCurrentUser] = React.useState({\n    name: \"\",\n    about: \"\",\n    avatar: \"\",\n    _id: \"\",\n  });\n\n  //States for getting initial cards from server:\n  const [cards, setCards] = React.useState([]);\n\n  //State for deleted card\n  const [deleteCard, setDeletedCard] = React.useState({\n    _id: \"\",\n  });\n\n  //API request for getting initial cards data:\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch(console.log);\n  }, []);\n\n  //API request for getting user data:\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((res) => {\n        setCurrentUser({\n          name: res.name,\n          about: res.about,\n          avatar: res.avatar,\n          _id: res._id,\n        });\n      })\n      .catch(console.log);\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({ name: card.name, link: card.link });\n  }\n\n  function handleDeletePostClick(card) {\n    setIsDeletePostPopupOpen(true);\n    setDeletedCard({ _id: card._id });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePostPopupOpen(false);\n    setSelectedCard({ name: \"\", link: \"\" });\n  }\n\n  function handleUpdateUser(newData) {\n    api\n      .setUserInfo(newData)\n      .then((res) => {\n        setCurrentUser({\n          name: res.name,\n          about: res.about,\n          avatar: res.avatar,\n          _id: res._id,\n        });\n        closeAllPopups();\n      })\n      .catch(console.log);\n  }\n\n  function handleUpdateAvatar(newData) {\n    api\n      .setUserAvatar(newData)\n      .then((res) => {\n        setCurrentUser({\n          name: res.name,\n          about: res.about,\n          avatar: res.avatar,\n          _id: res._id,\n        });\n        closeAllPopups();\n      })\n      .catch(console.log);\n  }\n\n  function handleCardLike(card) {\n    // Check if card was already liked:\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n    // Send a request to the API and getting the updated card data\n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((cardsState) =>\n          cardsState.map((item) => (item._id === card._id ? newCard : item))\n        );\n      })\n      .catch(console.log);\n  }\n\n  function handleCardDelete() {\n    api\n      .deleteCard(deleteCard._id)\n      .then(() => {\n        const newCards = cards.filter((item) => item._id !== deleteCard._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch(console.log);\n  }\n\n  function handleAddPlaceSubmit(newData) {\n    api\n      .createNewCard(newData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(console.log);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"content\">\n        <Header />\n        <Main\n          onEditProfileClick={handleEditProfileClick}\n          onAddPlaceClick={handleAddPlaceClick}\n          onEditAvatarClick={handleEditAvatarClick}\n          onDeletePostClick={handleDeletePostClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n        />\n        <Footer />\n\n        <section>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlaceSubmit={handleAddPlaceSubmit}\n          />\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          <DeletePostPopup\n            isOpen={isDeletePostPopupOpen}\n            onClose={closeAllPopups}\n            onDeletePostSubmit={handleCardDelete}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n        </section>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}